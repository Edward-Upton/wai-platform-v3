import { Popover } from "@headlessui/react";
import Head from "next/head";
import { useState } from "react";
import NavBar from "../../components/nav";
import { trpc } from "../../utils/trpc";

const MembershipPanel = () => {
  const memberCount = trpc.admin.memberCount.useQuery();

  const updateMembership = trpc.admin.updateMembership.useMutation({
    onSuccess: () => {
      memberCount.refetch();
    },
  });

  return (
    <>
      <Head>
        <title>Membership</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="relative min-h-screen w-full">
        <div className="z-0 w-full bg-white bg-opacity-90">
          <div className="mx-auto flex max-w-4xl flex-col py-4 px-8 md:px-12 lg:px-24">
            {/* Content */}
            <p className="text-3xl font-bold">Membership</p>
            <p className="text-lg text-gray-500">
              Manage users{"'"} membership
            </p>
            <p className="mt-4">Member count: {memberCount.data}</p>
            <button
              onClick={() => updateMembership.mutate()}
              className="mt-4 rounded-lg bg-secondary px-4 py-2 text-white hover:cursor-pointer hover:bg-secondary-focus"
            >
              Update membership from SU API
            </button>
            <DetailedMembershpPopup />
          </div>
        </div>
        <NavBar />
      </main>
    </>
  );
};

export default MembershipPanel;

const DetailedMembershpPopup = () => {
  const [tableCopyText, setTableCopyText] = useState("");
  const [dateOfElibility, setDateOfElibility] = useState("");

  const updateElibility = trpc.admin.updateVotingEligibility.useMutation();

  return (
    <Popover className="relative">
      {({ open }) => (
        <>
          <Popover.Button className="mt-4 w-full rounded-lg bg-secondary px-4 py-2 text-white hover:cursor-pointer hover:bg-secondary-focus">
            Update Voting Eligibility
          </Popover.Button>
          <Popover.Panel className="absolute top-16 left-0  z-10 flex w-full flex-col space-y-1 rounded-md border-2 bg-white p-2 text-center">
            <p className="text-lg font-bold">Update Voting Eligibility</p>
            <article className="text-sm text-gray-500">
              <p>
                Follow these instructions to update the voting eligibility of
                all members:
              </p>
              <ol className="list-inside list-decimal">
                <li>
                  Go to the{" "}
                  <a
                    href="https://www.warwicksu.com/organisation/memberlist/57846/?sort=groups"
                    target="_blank"
                    rel="noreferrer"
                  >
                    SU website
                  </a>
                </li>
                <li>
                  In the Standard Membership table, copy the contents of the
                  table. Highlight from the first row of the table to the last
                  row of the table, and copy the contents.
                </li>
                <li>
                  Paste the contents into the text box below, verify the parsing
                  looks correct.
                </li>
                <li>Set the Date of the point of eligibility.</li>
                <li>Click Update.</li>
              </ol>
            </article>
            <textarea
              className="w-full rounded-md border-2 p-2"
              placeholder="Paste the contents of the table here"
              value={tableCopyText}
              onChange={(e) => setTableCopyText(e.target.value)}
            />
            {/* Show a table of the parsed copy to validate */}
            <div className="h-52 w-full overflow-y-scroll">
              <table className="w-full">
                <thead>
                  <tr>
                    <th>ID</th>
                    <th>Joined</th>
                    <th>Expires</th>
                  </tr>
                </thead>
                <tbody>
                  {/* Split by newline */}
                  {tableCopyText.split("\n").map((row, i) => {
                    // Split by tab
                    const cells = row.split("\t");
                    return (
                      <tr key={i}>
                        <td>{cells[1]}</td>
                        <td>{cells[2]}</td>
                        <td>{cells[3]}</td>
                      </tr>
                    );
                  })}
                </tbody>
              </table>
            </div>
            <input
              className="w-full rounded-md border-2 p-2"
              type="datetime-local"
              value={dateOfElibility}
              onChange={(e) => setDateOfElibility(e.target.value)}
            />

            <button
              className="rounded-lg bg-secondary px-4 py-2 text-white hover:cursor-pointer hover:bg-secondary-focus"
              onClick={() =>
                updateElibility.mutate({
                  tableCopy: tableCopyText,
                  fromDate: new Date(dateOfElibility),
                })
              }
            >
              Update
            </button>
          </Popover.Panel>
        </>
      )}
    </Popover>
  );
};
